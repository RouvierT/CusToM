function [real_markers, nb_frame, Firstframe, Lastframe,f] = Get_real_markers(filename,list_markers, AnalysisParameters)
% Extraction of motion data
%
%   INPUT
%   - filename: name of the file to process (character string)
%   - list_markers: list of the marker names
%   - AnalysisParameters: parameters of the musculoskeletal analysis,
%   automatically generated by the graphic interface 'Analysis'
%   OUTPUT
%   - real_markers: 3D position of experimental markers
%   - nb_frame: number of frames
%   - Firstframe: number of the first frame
%   - Lastrfame: number of the last frame
%   - f: acquisition frequency
%________________________________________________________
%
% Licence
% Toolbox distributed under GPL 3.0 Licence
%________________________________________________________
%
% Authors : Antoine Muller, Charles Pontonnier, Pierre Puchaud and
% Georges Dumont
%________________________________________________________


if isfield(AnalysisParameters.IK,'clustercalibration')
   
    
    list_markers{end+1} = 'SCAPDB';
    list_markers{end+1} = 'SCAPDL';
    list_markers{end+1} = 'SCAPDH';

    [real_markers, nb_frame, Firstframe, Lastframe, f] = AnalysisParameters.General.InputData(filename, list_markers, AnalysisParameters.General.InputDataOptions);

    
    switch AnalysisParameters.IK.clustercalibration
        case 1 % Rigid calibration
            
            
            SCAPLOCB_epine=[-0.101703678794381,-0.074480937500281,-0.085004270484110];
            SCAPLOCLM_epine=[0.007947969554732,-0.047590640433864,0.047437731393216];
            SCAPLOCMM_epine=[-0.093198390016067,0.008212636464341,-0.033089747865993];
            
            for i=1:Lastframe-Firstframe+1
                SCAPDB=real_markers(end-2).position_c3d(i,:);
                SCAPDL=real_markers(end-1).position_c3d(i,:);
                SCAPDH=real_markers(end).position_c3d(i,:);
                O_SCAP = SCAPDB;
                X_SCAP = (SCAPDL - SCAPDB)/norm(SCAPDL - SCAPDB);
                yt_SCAP = SCAPDH - SCAPDB;
                Z_SCAP = (cross(X_SCAP,yt_SCAP))/norm(cross(X_SCAP,yt_SCAP));
                Y_SCAP = cross(Z_SCAP,X_SCAP);
                H_epine_vers_monde = [X_SCAP' Y_SCAP' Z_SCAP' O_SCAP'; 0 0 0 1];
                SCAPLOCB=H_epine_vers_monde*[SCAPLOCB_epine';1];
                SCAPLOCLM=H_epine_vers_monde*[SCAPLOCLM_epine';1];
                SCAPLOCMM=H_epine_vers_monde*[SCAPLOCMM_epine';1];
                SCAPLOCB=SCAPLOCB(1:3)';
                SCAPLOCLM=SCAPLOCLM(1:3)';
                SCAPLOCMM=SCAPLOCMM(1:3)';
                real_markers(end-5).position_c3d(i,:)=SCAPLOCLM;
                real_markers(end-4).position_c3d(i,:)=SCAPLOCMM;
                real_markers(end-3).position_c3d(i,:)=SCAPLOCB;
            end
            
        case 2 % Linear calibration
            
            O_SCAP_ar=[0.268450561523438,0.303168792724609,1.199984863281250];
            O_SCAP_av=[0.257816131591797,0.341655364990234,1.167387939453125];
            
            O_SCAPLOC_vers_epine_ar=[-0.096698717365621;-0.083096646855050;-0.082256762444728];
            O_SCAPLOC_vers_epine_av=[-0.106325551646658;-0.064652286888516;-0.058320663311548];
            PHI_SCAPLOC_vers_epine_ar=1.456665832886619;
            PHI_SCAPLOC_vers_epine_av=1.539222035502378;
            PSI_SCAPLOC_vers_epine_ar=-1.072163818955886;
            PSI_SCAPLOC_vers_epine_av=-1.336313060053991;
            SCAPLOCB_SCAPLOC=[0,0,0];
            SCAPLOCLM_SCAPLOC=[0.173844228161935,0,0];
            SCAPLOCMM_SCAPLOC=[0.057781760489578,0.079114354889957,0];
            THETA_SCAPLOC_vers_epine_ar=0.872158736632194;
            THETA_SCAPLOC_vers_epine_av=0.742379743226504;
            Q_SCAPLOC_vers_epine_ar=quaternion([0.889715439829564,0.127397012565509,-0.402718848096467,0.173187663261918]);
            Q_SCAPLOC_vers_epine_av=quaternion([0.923662837636707,0.036736932874570,-0.360859362086260,0.123603725374982]);
            
            
%             real_markers=LinearScapLocTransformation(Lastframe,Firstframe,real_markers,O_SCAP_ar,O_SCAP_av,...
%                 PSI_SCAPLOC_vers_epine_av,PSI_SCAPLOC_vers_epine_ar,...
%                 THETA_SCAPLOC_vers_epine_av, THETA_SCAPLOC_vers_epine_ar,...
%                 PHI_SCAPLOC_vers_epine_av, PHI_SCAPLOC_vers_epine_ar,...
%                 O_SCAPLOC_vers_epine_av,O_SCAPLOC_vers_epine_ar,...
%                 SCAPLOCB_SCAPLOC, SCAPLOCLM_SCAPLOC,SCAPLOCMM_SCAPLOC  );
            real_markers=LinearScapLocTransformation_Quaternion(Lastframe,Firstframe,real_markers,O_SCAP_ar,O_SCAP_av,...
                Q_SCAPLOC_vers_epine_av,Q_SCAPLOC_vers_epine_ar,...
                O_SCAPLOC_vers_epine_av,O_SCAPLOC_vers_epine_ar,...
                SCAPLOCB_SCAPLOC, SCAPLOCLM_SCAPLOC,SCAPLOCMM_SCAPLOC  );
            
        case 3 % Spline calibration
            O_SCAP_ar=[0.268450561523438,0.303168792724609,1.199984863281250];
            O_SCAP_mi=[0.262549407958984,0.313541717529297,1.193681152343750];
            O_SCAP_av=[0.257816131591797,0.341655364990234,1.167387939453125];
            
            O_SCAPLOC_vers_epine_ar=[-0.096698717365621;-0.083096646855050;-0.082256762444728];
            O_SCAPLOC_vers_epine_mi=[-0.104814208786034;-0.069138724350582;-0.079669765002649];
            O_SCAPLOC_vers_epine_av=[-0.106325551646658;-0.064652286888516;-0.058320663311548];
            
            PHI_SCAPLOC_vers_epine_ar=1.456665832886619;
            PHI_SCAPLOC_vers_epine_mi=1.463172350974032;
            PHI_SCAPLOC_vers_epine_av=1.539222035502378;
            PSI_SCAPLOC_vers_epine_ar=-1.072163818955886;
            PSI_SCAPLOC_vers_epine_mi=-1.188613447502503;
            PSI_SCAPLOC_vers_epine_av=-1.336313060053991;
            THETA_SCAPLOC_vers_epine_ar=0.872158736632194;
            THETA_SCAPLOC_vers_epine_mi=0.851013690759128;
            THETA_SCAPLOC_vers_epine_av=0.742379743226504;
            
            SCAPLOCB_SCAPLOC=[0,0,0];
            SCAPLOCLM_SCAPLOC=[0.173844228161935,0,0];
            SCAPLOCMM_SCAPLOC=[0.057781760489578,0.079114354889957,0];
            
            Q_SCAPLOC_vers_epine_ar=quaternion([0.889715439829564,0.127397012565509,-0.402718848096467,0.173187663261918]);
            Q_SCAPLOC_vers_epine_av=quaternion([0.923662837636707,0.036736932874570,-0.360859362086260,0.123603725374982]);
            Q_SCAPLOC_vers_epine_mi=quaternion([0.902300000000000,0.100100000000000,-0.400500000000000,0.124600000000000]);
            
%             real_markers=SplineScapLocTransformation(Lastframe,Firstframe,real_markers,O_SCAP_ar,O_SCAP_mi,O_SCAP_av,...
%                 PSI_SCAPLOC_vers_epine_av, PSI_SCAPLOC_vers_epine_mi,PSI_SCAPLOC_vers_epine_ar,...
%                 THETA_SCAPLOC_vers_epine_av, THETA_SCAPLOC_vers_epine_mi, THETA_SCAPLOC_vers_epine_ar,...
%                 PHI_SCAPLOC_vers_epine_av, PHI_SCAPLOC_vers_epine_mi, PHI_SCAPLOC_vers_epine_ar,...
%                 O_SCAPLOC_vers_epine_av, O_SCAPLOC_vers_epine_mi, O_SCAPLOC_vers_epine_ar,...
%                 SCAPLOCB_SCAPLOC, SCAPLOCLM_SCAPLOC,SCAPLOCMM_SCAPLOC  );

            real_markers=SplineScapLocTransformation_Quaternion(Lastframe,Firstframe,real_markers,O_SCAP_ar,O_SCAP_mi,O_SCAP_av,...
                Q_SCAPLOC_vers_epine_av, Q_SCAPLOC_vers_epine_mi, Q_SCAPLOC_vers_epine_ar,...
                O_SCAPLOC_vers_epine_av, O_SCAPLOC_vers_epine_mi, O_SCAPLOC_vers_epine_ar,...
                SCAPLOCB_SCAPLOC, SCAPLOCLM_SCAPLOC, SCAPLOCMM_SCAPLOC);
            
    end
    
    real_markers(end-2:end)=[];
else
    
    % Data extraction

    [real_markers, nb_frame, Firstframe, Lastframe, f] = AnalysisParameters.General.InputData(filename, list_markers, AnalysisParameters.General.InputDataOptions);

end


% Filtrage (Filtering)
if AnalysisParameters.General.FilterActive
    for i=1:numel(real_markers)
        real_markers(i).position_c3d(isnan(real_markers(i).position_c3d))=0;
        real_markers(i).position = filt_data(real_markers(i).position_c3d,AnalysisParameters.General.FilterCutOff,f);
    end
else
    for i=1:numel(real_markers)
        real_markers(i).position = real_markers(i).position_c3d;
    end
end

end
